name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cryptovault_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'  # Cambiado de 18 a 20
        cache: 'npm'

    - name: Delete package-lock.json  # Regenerar el lockfile
      run: rm -f package-lock.json

    - name: Install dependencies
      run: npm install

    - name: Setup database
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/cryptovault_test
      run: |
        npx prisma generate
        npx prisma migrate deploy

    - name: Run lint
      run: npm run lint

    - name: Run type check
      run: npx tsc --noEmit

    - name: Build application
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/cryptovault_test
        NEXTAUTH_SECRET: test-secret
        JWT_SECRET: test-jwt-secret
      run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        vercel-args: '--prod'